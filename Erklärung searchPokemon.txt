Hier ist eine schrittweise Erklärung der Funktion `searchPokemon`:

1. `async function searchPokemon(search) {`:
   - Definiert eine asynchrone Funktion namens `searchPokemon`, die ein Argument `search` erwartet.

2. `if (search.length < 3) {`:
   - Überprüft, ob die Länge der Sucheingabe weniger als 3 Zeichen beträgt.

3. `clearRemovedPokemonArray();`:
   - Ruft die Funktion `clearRemovedPokemonArray` auf, um das Array `removedPokemonArray` zu leeren.

4. `clearFilteredPokemonArray();`:
   - Ruft die Funktion `clearFilteredPokemonArray` auf, um das Array `filteredPokemonArray` zu leeren.

5. `return;`:
   - Beendet die Funktion, wenn die Sucheingabe weniger als 3 Zeichen lang ist.

6. `let count = 0;`:
   - Initialisiert einen Zähler `count` auf 0, um die Anzahl der gefundenen passenden Pokémon zu verfolgen.

7. `clearFilteredPokemonArray();`:
   - Ruft erneut `clearFilteredPokemonArray` auf, um sicherzustellen, dass das Array `filteredPokemonArray` vor jedem neuen Suchvorgang geleert wird.

8. `removedPokemonArray = [];`:
   - Leert das Array `removedPokemonArray`, um Platz für neu entfernte Pokémon zu schaffen.

9. `for (let i = 0; i < allFetchedPokemon.length; i++) {`:
   - Startet eine Schleife, die jedes Pokémon im Array `allFetchedPokemon` durchläuft.

10. `let name = allFetchedPokemon[i]['name'].toLowerCase();`:
    - Holt sich den Namen des aktuellen Pokémon und wandelt ihn in Kleinbuchstaben um.

11. `let type1 = allFetchedPokemon[i]['types'][0]['type']['name'].toLowerCase();`:
    - Holt sich den Namen des ersten Typs des aktuellen Pokémon und wandelt ihn in Kleinbuchstaben um.

12. `let type2 = allFetchedPokemon[i]['types'].length > 1 ? allFetchedPokemon[i]['types'][1]['type']['name'].toLowerCase() : '';`:
    - Holt sich den Namen des zweiten Typs des aktuellen Pokémon, falls vorhanden, und wandelt ihn in Kleinbuchstaben um. Wenn das Pokémon nur einen Typ hat, wird ein leerer String zugewiesen.

13. `if (name.includes(search) || type1.includes(search) || type2.includes(search)) {`:
    - Überprüft, ob der Suchbegriff in einem der Namen oder Typen des aktuellen Pokémon enthalten ist.

14. `showFilteredPokemon(allFetchedPokemon[i]);`:
    - Ruft eine Funktion `showFilteredPokemon` auf, um das gefundene Pokémon anzuzeigen.

15. `filteredPokemonArray.push(allFetchedPokemon[i]);`:
    - Fügt das gefundene Pokémon dem Array `filteredPokemonArray` hinzu.

16. `count++;`:
    - Inkrementiert den Zähler `count`, um die Anzahl der gefundenen passenden Pokémon zu erhöhen.

17. `if (count >= 10) {`:
    - Überprüft, ob bereits 10 passende Pokémon gefunden wurden.

18. `break;`:
    - Beendet die Schleife, wenn bereits 10 passende Pokémon gefunden wurden.

19. `else { removedPokemonArray.push(allFetchedPokemon[i]); }`:
    - Fügt das Pokémon dem Array `removedPokemonArray` hinzu, falls es nicht den Suchkriterien entspricht.

20. `}`:
    - Schließt die `for`-Schleife.

21. `}`:
    - Schließt die Funktion `searchPokemon`.dex.html